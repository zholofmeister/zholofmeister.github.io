<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://zholofmeister.github.io</id>
    <title>shut the fuck up</title>
    <updated>2020-07-31T19:40:15.398Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://zholofmeister.github.io"/>
    <link rel="self" href="https://zholofmeister.github.io/atom.xml"/>
    <subtitle>what ever can happen will happen</subtitle>
    <logo>https://zholofmeister.github.io/images/avatar.png</logo>
    <icon>https://zholofmeister.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, shut the fuck up</rights>
    <entry>
        <title type="html"><![CDATA[测试]]></title>
        <id>https://zholofmeister.github.io/post/ce-shi/</id>
        <link href="https://zholofmeister.github.io/post/ce-shi/">
        </link>
        <updated>2020-07-31T19:40:05.000Z</updated>
        <content type="html"><![CDATA[<p>测试</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2020-07-08 快到多校了，要进入状态了]]></title>
        <id>https://zholofmeister.github.io/post/2020-07-08-kuai-dao-duo-xiao-liao-yao-jin-ru-zhuang-tai-liao/</id>
        <link href="https://zholofmeister.github.io/post/2020-07-08-kuai-dao-duo-xiao-liao-yao-jin-ru-zhuang-tai-liao/">
        </link>
        <updated>2020-07-07T21:42:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="凌晨529">凌晨5:29</h3>
<p>今天是8号，12号就要开始多校了，要开始进入状态了，今天做了几道水题练练手，一题贪心，下面是岸，上面是水，水里有一些小岛，现在让你在岸边放有固定范围的雷达，问你最小要放多少个。</p>
<blockquote>
<p>可以转化成最基本的模型，把每个小岛在岸边的可行范围求出来，然后就得到了n个道在岸边的可行范围，所以问题就变成了有n个区间，现在让你选最少的点，使得全覆盖所有区间。</p>
<p>注意贪心的时候，如果遇到<code>maxr &lt; po[i].l</code>那就直接<code>maxr = po[i].r; ++ans;</code></p>
<p>！！！如果遇到<code>maxr &gt;= po[i].l</code>,说明区间有交集，别忘了要<code>maxr = min(maxr, po[i].r)</code></p>
</blockquote>
<p>然后做了到匈牙利，好久没写代码了，竟然1a了，233。过了一遍前向星和匈牙利。</p>
<p>然后看了一下19级的题。有道题没人做，就无聊写写。</p>
<p>挺简单的。。 转念一想我去年这个时候也是这么菜，233.</p>
<p>给你一张图，上面有门的钥匙和门，现在问你能不能在t时间内走到出口。</p>
<p>一看钥匙只有A-J，10个字母，状态压缩呗，vis【i】【j】【k】表示在i行j列，目前有k状态钥匙。</p>
<p>每个钥匙就是用二进制位来表示，2^10 = 1024， 1024 * 20 * 20 == 4e5, 不会MLE。</p>
<p>然后就跟普通bfs搞一下就行。。</p>
<p>睡了，明天去趟赛格买点垃圾，然后回来继续进入状态。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2020-06-29 操作系统考前作死打div3 && vector的erase脑瘫操作]]></title>
        <id>https://zholofmeister.github.io/post/2020-06-29-cao-zuo-xi-tong-kao-qian-zuo-si-da-div3-and-vector-de-erase-nao-tan-cao-zuo/</id>
        <link href="https://zholofmeister.github.io/post/2020-06-29-cao-zuo-xi-tong-kao-qian-zuo-si-da-div3-and-vector-de-erase-nao-tan-cao-zuo/">
        </link>
        <updated>2020-06-28T19:16:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="凌晨309">凌晨3:09</h3>
<p>明天下午就要考操作系统了，一页开卷的资料还没抄完，看了看cf，今天晚上竟然有div3？？？，果断报名，并且没！有！鸽！做了5题，还行吧，d用了加了玄学防hack的unorder_map，希望别被hack，e1我真的服了，以后我再用vector的erase我就是傻逼，erase的复杂度为删除的个数+最后一个元素之后有多少个元素，所以复杂度为<code>O(n)</code>,我属实脑瘫，<code>while</code>里面疯狂<code>xx.erase(xx.begin())</code>，TLE on test 20了半个小时没找到原因，后来在脑海中残存的数据结构的记忆唤醒了我，好像数组里删一个数是<code>O(n)</code>的啊，所以我vector erase你妈个头啊，不说了，没有下次vector erase了！</p>
<p>希望明天操作系统能上个70？？<s>80最好啦</s></p>
<p>以上。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2020-06-28 只剩os和嵌入式就能训练了XD]]></title>
        <id>https://zholofmeister.github.io/post/2020-06-28-zhi-sheng-os-he-qian-ru-shi-jiu-neng-xun-lian-liao-xd/</id>
        <link href="https://zholofmeister.github.io/post/2020-06-28-zhi-sheng-os-he-qian-ru-shi-jiu-neng-xun-lian-liao-xd/">
        </link>
        <updated>2020-06-27T19:33:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="凌晨327">凌晨3:27</h3>
<p>今天nf上看了部电视剧<code>裸体导演</code>，感觉还可以，比国产nt宫廷剧有意思多了。</p>
<p>明天考操作系统，后天嵌入式，考完就能回家了233, 7月10号牛客多校第一场，其实回去玩的时间最多也就5天吧，训练不是闹着玩的，打到8月20，我在这里向自己保证每场都当做现场赛打，5个小时绝对专注，希望经过暑假的训练自己的水平能再上一个档次吧，<s>暑假之后至少要上个紫吧</s>。</p>
<p>操作系统感觉还有好多不会，幸好一页开卷，明天再花一天搞搞。</p>
<p>以上。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2020-6-24 考线代咯]]></title>
        <id>https://zholofmeister.github.io/post/2020-6-24-kao-xian-dai-ge/</id>
        <link href="https://zholofmeister.github.io/post/2020-6-24-kao-xian-dai-ge/">
        </link>
        <updated>2020-06-23T19:37:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="凌晨302">凌晨3:02</h3>
<p>明天考线代了，今天做一个线代概念总结吧。</p>
<ol>
<li>除了求矩阵的秩不用化简到最简阶梯型，其他都要化简到最简阶梯型，最简阶梯型的每个主元都<code>一定是1</code>。</li>
<li>求极大线性无关组
<ul>
<li>如果阶梯型矩阵的秩 &lt; m,说明线性相关，如果等于m，说明线性无关。</li>
<li>如果存在一组k，能使k1a1+k2a2+...+kmam == 0其中k<code>不全为0</code>，则说明线性相关，否则线性无关。</li>
</ul>
</li>
<li>齐次线性方程组
<ul>
<li>如果阶梯型矩阵的秩 &lt; m，说明有无穷多解，且有<code>n - R(A)</code>个基础解系</li>
<li>如果等于m，只有零解</li>
</ul>
</li>
<li>非齐次线性方程组
<ul>
<li>如果<code>R(A) != R(A:B)</code>, 无解。</li>
<li>如果<code>R(A) == R(A:B) == m</code>，有唯一解。</li>
<li>如果<code>R(A) == R(A:B) &lt; m</code>, 有无穷多解。</li>
<li>求通解就是先让每个自由元变成1，其他的自由元变成0，然后得到主元的值，分别得到几个基础解系，然后<code>k x 每个基础解系</code> + <code>最后一列数</code>就是答案。（k为任意数）。</li>
</ul>
</li>
</ol>
<blockquote>
<p>大概也就这样了吧，前面主要是计算，到时候考场上做完了再重新算一遍就好了。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2020-06-21 杭电校赛 && 期末复习]]></title>
        <id>https://zholofmeister.github.io/post/2020-06-21-hang-dian-xiao-sai-and-qi-mo-fu-xi/</id>
        <link href="https://zholofmeister.github.io/post/2020-06-21-hang-dian-xiao-sai-and-qi-mo-fu-xi/">
        </link>
        <updated>2020-06-20T19:47:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="凌晨342">凌晨3：42</h3>
<blockquote>
<p>好久没写博客了，说些什么吧。</p>
</blockquote>
<p>今天打了校赛，12点的校赛，我11:10被老妈和闹钟叫醒的，然后心想再眯一会，眯到11：50，哦吼，完蛋，只能早饭都不吃直接去实验室打比赛，12:08左右到的实验室，直接就开始打比赛了，间歇性禁食+acm更香哦，最后结果还行吧，会做的题基本上都做出来了，除了好几天没写代码手感有点不太好，好几题都先wa了一两次，1a率感人..打完就急不可耐的去吃饭啦，红火飞扬的鸡排好难吃。。以后不吃了。</p>
<p>明天可以开始看概率论了，感觉时间还是蛮多的，说不定晚上还可以做几道题233。</p>
<p>今天大概就是这样了，下午校赛，晚上看了会线代，凌晨看了会大物。</p>
<blockquote>
<p>今天获得的最大教训就是以后醒了一定要起床啊，不然会坏大事！</p>
</blockquote>
<p>以上。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2020-6-15 最小割唯一性 && d525软路由试用]]></title>
        <id>https://zholofmeister.github.io/post/2020-6-15-zui-xiao-ge-wei-yi-xing-and-d525-ruan-lu-you-shi-yong/</id>
        <link href="https://zholofmeister.github.io/post/2020-6-15-zui-xiao-ge-wei-yi-xing-and-d525-ruan-lu-you-shi-yong/">
        </link>
        <updated>2020-06-14T19:34:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="凌晨323">凌晨3:23</h3>
<p>今天补了一下昨天cf的题，原来建图可以不建所有的点也可以搞出答案，而且是更简单地判断出是否能搞出答案。</p>
<p>还学了一下最小割唯一性如何判定 - &gt; <a href="https://www.cnblogs.com/lishiyao/p/6606583.html">策爷的思路</a>：</p>
<ol>
<li>
<p>对于任意一条满流边(u,v)，(u,v)<strong>能够</strong>出现在某个最小割集中，当且仅当<code>belong[u] != belong[v]</code>。</p>
</li>
<li>
<p>对于任意一条满流边(u,v)，(u,v)<strong>必定</strong>出现在最小割集中，当且仅当<code>belong[u] == belong[s]且belong[v] == belong[t]</code>。</p>
</li>
</ol>
<blockquote>
<p>最后遍历之前输入的每条边就行了，如果是双向的就遍历他的两条单向边。</p>
</blockquote>
<p>然后就划水了一晚上，干你老师，搞了下软路由，d525是真的牛逼奥，功率20w，wdnm，冬天暖手用，还有遇到的一个问题，pppoe拨号后连不上网，然后进wan口的高级设置里把 <code>obtain IPv6-Address</code>改成禁用就行了。</p>
<figure data-type="image" tabindex="1"><img src="https://zholofmeister.github.io/post-images/1592164937633.png" alt="" loading="lazy"></figure>
<p>明天真要开始复习文化课咯，6.20还有个杭电校赛XD，好好打。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2020-06-12 edu场毒瘤啊 && 脑力训练的一天]]></title>
        <id>https://zholofmeister.github.io/post/2020-06-12-edu-chang-du-liu-a-and-nao-li-xun-lian-de-yi-tian/</id>
        <link href="https://zholofmeister.github.io/post/2020-06-12-edu-chang-du-liu-a-and-nao-li-xun-lian-de-yi-tian/">
        </link>
        <updated>2020-06-11T18:07:34.000Z</updated>
        <content type="html"><![CDATA[<h3 id="凌晨153">凌晨1:53</h3>
<p>今天周四，准确的说是昨天周四，我还以为周五，关键是我早上我9:40醒了，想再睡5分钟，但是睡到11点，以为体育考试鸽了，好麻烦，结果看了下微信体育群没通知？？然后看了看日历，发现是周四，草。</p>
<p>搞了到判断一个无向图有没有<code>欧拉回路</code>的水题。</p>
<p>今天搞了道网络流，每个人走到房子都有一个代价，现在问你代价和最小是多少</p>
<ol>
<li>
<p>最小费用最大流</p>
<p>超级原点和每个人连一条容量1费用0的流，每个房子和超级汇点连一条容量1费用0的流，然后每个人和他可以到的房子连一条容量1费用为代价的流，跑最小费用最大流，最小费用就是代价的最小值。</p>
</li>
<li>
<p>KM</p>
<p>把权值搞成负值，然后跑个KM再取个相反数就是答案了。</p>
</li>
</ol>
<p>edu场是毒瘤把，已经三场edu掉分了，还都是<strong>大分</strong>，不知道说什么。</p>
<p>就做了ABC，AB没什么讲的，A我还wa了一次，真的索嗨，C是一道让你走只有01的迷宫，从<code>(1,1)</code>走到<code>(n, m)</code>，要求走的每条足迹是个回文串，现在问你最少要改原图几个位置才能满足这一需求。</p>
<blockquote>
<p>主要是看对称位置，记录一下信息就行，我他吗搞了半天并查集，最后还搞出来了，其实是一个东西，比赛的时候也有点想到记录对称位置的思想，但是没从<code>(i + j)</code>和<code>(n + m - (i + j))</code>的关系想，学到了，格子图有使要关注<code>(i + j)</code>的意义。</p>
</blockquote>
<p>6.12号了，明天可以文化课复习起来了，7月之前再学两个新算法吧，以上。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2020-06-11 积累网络流模型 && 脑力训练的一天]]></title>
        <id>https://zholofmeister.github.io/post/2020-06-11-ji-lei-wang-luo-liu-mo-xing-and-nao-li-xun-lian-de-yi-tian/</id>
        <link href="https://zholofmeister.github.io/post/2020-06-11-ji-lei-wang-luo-liu-mo-xing-and-nao-li-xun-lian-de-yi-tian/">
        </link>
        <updated>2020-06-10T19:59:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="凌晨327">凌晨3:27</h3>
<p>我干你老师，越睡越晚，早点写完博客睡了XD。</p>
<ol>
<li>
<p>有n个项目，每个项目有m个方面的条件和m个方面的结果，单位时间内可以做p个成果，现在问你所有项目单位时间内最多能做多少个工作。</p>
<blockquote>
<p>首先原点和0 0 0的连条INF的边，1 1 1的和汇点连条INF边，拆点，入点和出点之间边权是p，如果x工作的结果可以达到y工作的条件，那么就x的出点连一条INF的边到y的入度，最后跑一个最大流就行。</p>
<p>原点和不要任何条件的项目连INF的流<code>-&gt;</code>项目拆点，项目的入点和出点之间连一条p的流，如果项目a完成的结果可以当做项目b的开工条件，那么就a的出点和b的入点连INF的流<code>-&gt;</code>每个条件都有的项目和汇点连INF的流</p>
</blockquote>
</li>
<li>
<p>有n个奶牛，f个食物和d个饮料，每个奶牛分别想吃某些食物和某些饮料，某个食物和饮料只能用一次，现在问你最多能满足几头牛的需求。</p>
<blockquote>
<p>注意每头牛只能满足一次关系，所以要拆点，不然有可能一头牛吃了两顿饭（两个食物和两杯饮料）</p>
<p>原点和所有食物连1的流，食物和对他有兴趣的牛的入点连1的流，每个牛的入点和他的出点连1的流，牛的出点和他感兴趣的饮料连1的流，所有饮料和汇点连1的流，跑最大流就行。</p>
<p>原点和所有食物连1的流<code>-&gt;</code> 食物和对他感兴趣的牛的入点连1的流 <code>-&gt;</code> 每个牛的入度和牛的出度连1的流 <code>-&gt;</code>每个牛的出度和他感兴趣的饮料连1的流 <code>-&gt;</code> 每个饮料和汇点连1的流。</p>
</blockquote>
</li>
<li>
<p>首先你有n个不同种类的插头，现在有m个电器，每个电器有他自己的插头，有k个转换插头，现在问你最少有多少电器的需求不能被满足。</p>
<blockquote>
<p>原点和n 个插头连1的流，代表林北现在有这些插头，每个电器和汇点连1的流，但是别急，现在你还不知道汇点在哪呢，因为k个转换插头的缘故，你不知道会不会出现新的种类的插口，所以汇点要等到所有可能的插口输完了才知道。</p>
<p>原点和n个插头连1的流 <code>-&gt;</code> 转换插头连1的流 <code>-&gt;</code>电器的插头和汇点连1的流</p>
</blockquote>
</li>
<li>
<p>有n个牛想上学，每个牛和他上学的价值和所要交的学费，现在规定要让c<code>(c是个奇数)</code>头牛上学，只有f钱，问你能获得最大的上学牛之间价值的中位数是多少。</p>
<blockquote>
<p>先把所有牛按照价值从小到大排序，然后用优先队列分别从头到尾和从尾到头维护一个选(c-1)/2个牛上学所交学费和的最小值，最后从尾到头扫一遍一开始排好序的牛，如果左边(c-1)/2的最小值和右边(c-1)/2最小值再加上当前牛要交的学费小于等于c，那这个数就是答案，输出。找不到就输出-1。</p>
</blockquote>
</li>
</ol>
<p>写完啦，跟博客说话挺有意思的，想说啥就说啥，感觉有点精神分裂了哈哈哈。越来越讨厌人际交往了，感觉只有跟讲的来或者目标相同的人说话才不会让我感到反感，所以遇到傻逼混日子的乡下人的干脆别说话，3m耳罩一戴继续滚去刷题，练了拳击以后更加隐忍和忠于自我了奥。</p>
<p>昨天打拳击时left body shot的时候扭到手腕了奥，今天稍微缓解了一点，这周就不练了吧，遇到傻逼就当成是心理训练了吧。</p>
<p>现在4:00咯，明天9：45还要爬起来去考体育的立定跳远哦，干你老师，不知道明天会不会白给，晚上还要打一场edu233，不管怎样认真打吧，给自己多点压力 :&gt;</p>
<blockquote>
<p>whatever can happen will happen.</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2020-06-10 脑力训练的一天]]></title>
        <id>https://zholofmeister.github.io/post/2020-06-10-nao-li-xun-lian-de-yi-tian/</id>
        <link href="https://zholofmeister.github.io/post/2020-06-10-nao-li-xun-lian-de-yi-tian/">
        </link>
        <updated>2020-06-09T19:19:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="凌晨257">凌晨2:57</h3>
<p>训练的一天，算是搞了三道题吧，还有一道网络流输入太毒瘤了，心态崩了，没做下去。</p>
<ol>
<li>
<p>用网络流求二分图最大匹配，并且输出每个配对的信息。</p>
<p>求最大匹配就造一个超级原点和超级汇点跑一下最大流就行了。</p>
<p>输出信息可以遍历输入的每条边，存一下他们在edges数组中的编号，dicnic后遍历他们，如果e.cap == e.flow就说明是一个配对，输出e.from, e.to。</p>
</li>
<li>
<p>最大权闭合子图。</p>
<h4 id="什么是最大权闭合子图">什么是最大权闭合子图?</h4>
<blockquote>
<p>有一个有向图，每一个点都有一个权值（可以为正或负或0），选择一个权值和最大的子图，使得每个点的后继都在子图里面，这个子图就叫最大权闭合子图。<br>
<img src="https://zholofmeister.github.io/post-images/1591777341237.png" alt="" loading="lazy"></p>
</blockquote>
<h4 id="如果搞">如果搞？</h4>
<blockquote>
<p>最大闭权子图一个经典的网络流问题，如果一个点被选择了则后继必须被选择，那么称该图是 闭合的，因此该问题叫做最大权闭合子图问题。可以使用最小割解决。<br>
具体的建图方法为：<br>
源点向所有正权点连结一条容量为权值的边<br>
保留原图中所有的边，容量为正无穷<br>
所有负权点向汇点连结一条容量为权值绝对值的边<br>
则原图的最大权闭合子图的点权和即为所有正权点权值之和减去建出的网络流图的最小割。<br>
以下约定源点为 ss，汇点为 tt。<br>
在最小割图上，如果割掉 ss 和 uu 之间的边，代表不选择 uu 进入子图（收益 &lt; 总消耗），如果割掉 vv 和 tt 之间的边，代表选择 vv 进入子图。<br>
求完最小割后，如果点 ii 与 ss 相连，那么子图上会选择点 ii，如果 ii 与 tt 相连，则不选择点 ii。</p>
</blockquote>
<p>经典问题就是给你n个药品计划，每个计划有赞助商给的钱，但是每个计划也分别需要某些药品，当然，这些药品分别需要钱来买，现在问你最大收益是多少。</p>
<h5 id="解法">解法:</h5>
<p>源点向所有正权点连结一条容量为权值的边<br>
保留原图中所有的边，容量为正无穷<br>
所有负权点向汇点连结一条容量为权值绝对值的边</p>
<p>跑个最大流，用来作最小割，（原因可以想一想<code>收益 &gt; 消耗</code>和<code>收益 &lt; 消耗</code>两种情况）</p>
<p>用所有收益和 - 最小割就是答案。</p>
</li>
<li>
<p>一道一眼看不出rmq st表的rmq st表，给你n个ai,是个non-decreasing数组，下面m个询问l, r， 问你l， r区间中出现频率最高的数出现了多少次。</p>
<h5 id="解法-2">解法：</h5>
<p>先预处理一个a[i]数组表示到i这个位置的数已经连续出现的次数。</p>
<p><code>询问部分</code>：然后如果<code>a[l] != 1</code>，就把l往右推，当然不能超过r，同时记录一下推了几格，然后对几格和推了以后的l, r的rmq取个max就是答案了。</p>
<p>最坏时间复杂度O(n*q)，但q没给范围，迷惑行为。</p>
</li>
</ol>
<p>睡了睡了，明天继续训练吧。</p>
]]></content>
    </entry>
</feed>